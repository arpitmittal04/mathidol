{"version":3,"sources":["morphext.js"],"names":["$","Plugin","element","options","this","settings","extend","defaults","_defaults","_init","pluginName","animation","separator","speed","complete","noop","prototype","$that","phrases","addClass","each","text","split","key","value","push","trim","index","animate","start","length","innerHTML","isFunction","call","_interval","setInterval","stop","clearInterval","fn","data","jQuery"],"mappings":"CAgBA,SAAWA,GACP,YAUA,SAASC,GAAQC,EAASC,GACtBC,KAAKF,QAAUF,EAAEE,GAEjBE,KAAKC,SAAWL,EAAEM,UAAWC,EAAUJ,GACvCC,KAAKI,UAAYD,EACjBH,KAAKK,QAbT,GAAIC,GAAa,WACbH,GACII,UAAW,WACXC,UAAW,IACXC,MAAO,IACPC,SAAUd,EAAEe,KAWpBd,GAAOe,WACHP,MAAO,WACH,GAAIQ,GAAQb,IACZA,MAAKc,WAELd,KAAKF,QAAQiB,SAAS,YAEtBnB,EAAEoB,KAAKhB,KAAKF,QAAQmB,OAAOC,MAAMlB,KAAKC,SAASO,WAAY,SAAUW,EAAKC,GACtEP,EAAMC,QAAQO,KAAKD,EAAME,UAG7BtB,KAAKuB,MAAQ,GACbvB,KAAKwB,UACLxB,KAAKyB,SAETD,QAAS,WACLxB,KAAKuB,QAAUvB,KAAKuB,MAAQvB,KAAKc,QAAQY,OACzC1B,KAAKF,QAAQ,GAAG6B,UAAY,yBAA4B3B,KAAKC,SAASM,UAAY,KAAQP,KAAKc,QAAQd,KAAKuB,OAAS,UAEjH3B,EAAEgC,WAAW5B,KAAKC,SAASS,WAC3BV,KAAKC,SAASS,SAASmB,KAAK7B,OAGpCyB,MAAO,WACH,GAAIZ,GAAQb,IACZA,MAAK8B,UAAYC,YAAY,WACzBlB,EAAMW,WACPxB,KAAKC,SAASQ,QAErBuB,KAAM,WACFhC,KAAK8B,UAAYG,cAAcjC,KAAK8B,aAI5ClC,EAAEsC,GAAG5B,GAAc,SAAUP,GACzB,MAAOC,MAAKgB,KAAK,WACRpB,EAAEuC,KAAKnC,KAAM,UAAYM,IAC1BV,EAAEuC,KAAKnC,KAAM,UAAYM,EAAY,GAAIT,GAAOG,KAAMD,QAInEqC","file":"morphext.min.js","sourcesContent":["/*!\n * Morphext - Text Rotating Plugin for jQuery\n * https://github.com/MrSaints/Morphext\n *\n * Built on jQuery Boilerplate\n * http://jqueryboilerplate.com/\n *\n * Copyright 2014 Ian Lai and other contributors\n * Released under the MIT license\n * http://ian.mit-license.org/\n */\n\n/*eslint-env browser */\n/*global jQuery:false */\n/*eslint-disable no-underscore-dangle */\n\n(function ($) {\n    \"use strict\";\n\n    var pluginName = \"Morphext\",\n        defaults = {\n            animation: \"bounceIn\",\n            separator: \",\",\n            speed: 2000,\n            complete: $.noop\n        };\n\n    function Plugin (element, options) {\n        this.element = $(element);\n\n        this.settings = $.extend({}, defaults, options);\n        this._defaults = defaults;\n        this._init();\n    }\n\n    Plugin.prototype = {\n        _init: function () {\n            var $that = this;\n            this.phrases = [];\n\n            this.element.addClass(\"morphext\");\n\n            $.each(this.element.text().split(this.settings.separator), function (key, value) {\n                $that.phrases.push(value.trim());\n            });\n\n            this.index = -1;\n            this.animate();\n            this.start();\n        },\n        animate: function () {\n            this.index = ++this.index % this.phrases.length;\n            this.element[0].innerHTML = \"<span class=\\\"animated \" + this.settings.animation + \"\\\">\" + this.phrases[this.index] + \"</span>\";\n\n            if ($.isFunction(this.settings.complete)) {\n                this.settings.complete.call(this);\n            }\n        },\n        start: function () {\n            var $that = this;\n            this._interval = setInterval(function () {\n                $that.animate();\n            }, this.settings.speed);\n        },\n        stop: function () {\n            this._interval = clearInterval(this._interval);\n        }\n    };\n\n    $.fn[pluginName] = function (options) {\n        return this.each(function() {\n            if (!$.data(this, \"plugin_\" + pluginName)) {\n                $.data(this, \"plugin_\" + pluginName, new Plugin(this, options));\n            }\n        });\n    };\n})(jQuery);\n"],"sourceRoot":"/source/"}